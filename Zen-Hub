local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()

local Window = OrionLib:MakeWindow({Name = "Zen HubðŸ¤¢ðŸ¤§", HidePremium = false, SaveConfig = true, ConfigFolder = "OrionTest"})

--[[
Name = <string> - The name of the UI.
HidePremium = <bool> - Whether or not the user details shows Premium status or not.
SaveConfig = <bool> - Toggles the config saving in the UI.
ConfigFolder = <string> - The name of the folder where the configs are saved.
IntroEnabled = <bool> - Whether or not to show the intro animation.
IntroText = <string> - Text to show in the intro animation.
IntroIcon = <string> - URL to the image you want to use in the intro animation.
Icon = <string> - URL to the image you want displayed on the window.
CloseCallback = <function> - Function to execute when the window is closed.
]]

local Tab = Window:MakeTab({
	Name = "Scirpts",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

--[[
Name = <string> - Scirpts.
Icon = <string> - The icon of the tab.
PremiumOnly = <bool> - Makes the tab accessible to Sirus Premium users only.
]]

local Section = Tab:AddSection({
	Name = "Fun stuff"
})

--[[
Name = <string> - The name of the section.
]]

Tab:AddButton({
	Name = "infite yield FE",
	Callback = function()loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()


      		print("button pressed")
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]

Tab:AddButton({
	Name = "Nyula Dh camlock",
	Callback = function()loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/nyulachan/nyula/main/nyuladhm"))()
      		print("button pressed")
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]

Tab:AddButton({
	Name = "Hitbox scirpt",
	Callback = function()local ScreenGui = Instance.new("ScreenGui") local main = Instance.new("Frame") local label = Instance.new("TextLabel") local Hitbox = Instance.new("TextButton") ScreenGui.Parent = game.CoreGui main.Name = "main" main.Parent = ScreenGui main.BackgroundColor3 = Color3.fromRGB(255, 0, 0) main.Position = UDim2.new(0.40427351, 0, 0.34591195, 0) main.Size = UDim2.new(0, 100, 0, 100) main.Active = true main.Draggable = true label.Name = "label" label.Parent = main label.BackgroundColor3 = Color3.fromRGB(139,0,0) label.Size = UDim2.new(0, 100, 0, 20) label.Font = Enum.Font.SourceSans label.Text = "Hitbox Gui" label.TextColor3 = Color3.fromRGB(0, 0, 0) label.TextScaled = true label.TextSize = 5.000 label.TextWrapped = true Hitbox.Name = "Hitbox" Hitbox.Parent = main Hitbox.BackgroundColor3 = Color3.fromRGB(0, 0, 255) Hitbox.Position = UDim2.new(0.114285722, 0, 0.372448981, 0) Hitbox.Size = UDim2.new(0, 90, 0, 40) Hitbox.Font = Enum.Font.SourceSans Hitbox.Text = "Hitbox" Hitbox.TextColor3 = Color3.fromRGB(0, 0, 0) Hitbox.TextSize = 40.000 Hitbox.MouseButton1Down:connect(function() _G.HeadSize = 20 _G.Disabled = true game:GetService('RunService').RenderStepped:connect(function() if _G.Disabled then for i,v in next, game:GetService('Players'):GetPlayers() do if v.Name ~= game:GetService('Players').LocalPlayer.Name then pcall(function() v.Character.HumanoidRootPart.Size = Vector3.new(_G.HeadSize,_G.HeadSize,_G.HeadSize) v.Character.HumanoidRootPart.Transparency = 0.7 v.Character.HumanoidRootPart.BrickColor = BrickColor.new("Really black") v.Character.HumanoidRootPart.Material = "Neon" v.Character.HumanoidRootPart.CanCollide = false end) end end end end) end)
      		print("button pressed")
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]

Tab:AddButton({
	Name = "q tool",
	Callback = function()getgenv().keytoclick = "Q" tool = Instance.new("Tool") tool.RequiresHandle = false tool.Name = keytoclick tool.Activated:connect(function() local vim = game:service("VirtualInputManager") vim:SendKeyEvent(true, keytoclick, false, game) end) tool.Parent = game.Players.LocalPlayer.Backpack wait(0.2) local AkaliNotif = loadstring(game:HttpGet("https://raw.githubusercontent.com/Kinlei/Dynissimo/main/Scripts/AkaliNotif.lua"))(); local Notify = AkaliNotif.Notify; Notify({ Description = "sus"; Title = "sus"; Duration = 5; });
      		print("button pressed")
  	end    
})

Tab:AddButton({
	Name = "Gun fight area scirpt",
	Callback = function()loadstring(game:HttpGet("https://raw.githubusercontent.com/LOLking123456/Gunfight/main/Arena"))()
      		print("button pressed")
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]
Tab:AddButton({
	Name = "Steal time scirpt STFO!",
	Callback = function()loadstring(game:HttpGet("https://raw.githubusercontent.com/Brew-Softworks/StealTime/main/ST.lua"))()
      		print("button pressed")
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]

Tab:AddButton({
	Name = "Fe click fling",
	Callback = function()loadstring(game:HttpGet(('https://raw.githubusercontent.com/0Ben1/fe/main/obf_5wpM7bBcOPspmX7lQ3m75SrYNWqxZ858ai3tJdEAId6jSI05IOUB224FQ0VSAswH.lua.txt'),true))()
      		print("button pressed")
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]

Tab:AddButton({
	Name = "Esp",
	Callback = function()loadstring(game:HttpGet("https://pastebin.com/raw/s7viVmDR"))()
      		print("button pressed")
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]

Tab:AddButton({
	Name = "Sun God aimbot works for sum games",
	Callback = function()--Made by Ã°â€™Ë†â„¢Ã°â€™Ë†â„¢Ã°â€™Ë†â„¢Ã°â€™Ë†â„¢Ã°â€™Ë†â„¢Ã°â€™Ë†â„¢Ã°â€™Ë†â„¢Ã°â€™Ë†â„¢Ã°â€™Ë†â„¢Ã°â€™Ë†â„¢Ã°â€™Ë†â„¢Ã°â€™Ë†â„¢Ã°â€™Ë†â„¢Ã°â€™Ë†â„¢Ã°â€™Ë†â„¢Ã°â€™Ë†â„¢#3151 --paste discord into discord if u have this script on notepad --made by INCIMIST on rblx :) 		Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/vKhonshu/intro2/main/ui2"))() 		local NotifyLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/vKhonshu/intro/main/ui"))() 		NotifyLib.prompt('Sun God', 'Loading..', 5) 		NotifyLib.prompt('Aimlock loaded', 'Smite them with Q', 5) 		NotifyLib.prompt('Sun God', 'best lock :pray:', 5) 		Settings = { 			rewrittenmain = { 				Enabled = true, 				Key = "q", 				DOT = true, 				AIRSHOT = true, 				NOTIF = true, 				AUTOPRED = false, 				FOV = math.huge, 				RESOVLER = false 			} 		} 		local SelectedPart = "HumanoidRootPart" 		local Prediction = true 		local PredictionValue = 0.1357363 		local AnchorCount = 0 		local MaxAnchor = 50 		local CC = game:GetService"Workspace".CurrentCamera 		local Plr; 		local enabled = false 		local accomidationfactor = 0.136 		local mouse = game.Players.LocalPlayer:GetMouse() 		local placemarker = Instance.new("Part", game.Workspace) 		function makemarker(Parent, Adornee, Color, Size, Size2) 			local e = Instance.new("BillboardGui", Parent) 			e.Name = "PP" 			e.Adornee = Adornee 			e.Size = UDim2.new(Size, Size2, Size, Size2) 			e.AlwaysOnTop = Settings.rewrittenmain.DOT 			local a = Instance.new("Frame", e) 			if Settings.rewrittenmain.DOT == true then 				a.Size = UDim2.new(1, 0, 1, 0) 			else 				a.Size = UDim2.new(0, 0, 0, 0) 			end 			if Settings.rewrittenmain.DOT == true then 				a.Transparency = 0 				a.BackgroundTransparency = 0 			else 				a.Transparency = 1 				a.BackgroundTransparency = 1 			end 			a.BackgroundColor3 = Color 			local g = Instance.new("UICorner", a) 			if Settings.rewrittenmain.DOT == false then 				g.CornerRadius = UDim.new(0, 0) 			else 				g.CornerRadius = UDim.new(1, 1) 			end 			return(e) 		end 		local data = game.Players:GetPlayers() 		function noob(player) 			local character 			repeat wait() until player.Character 			local handler = makemarker(guimain, player.Character:WaitForChild(SelectedPart), Color3.fromRGB(240, 250, 1), 0.3, 3) 			handler.Name = player.Name 			player.CharacterAdded:connect(function(Char) handler.Adornee = Char:WaitForChild(SelectedPart) end) 			spawn(function() 				while wait() do 					if player.Character then 					end 				end 			end) 		end 		for i = 1, #data do 			if data[i] ~= game.Players.LocalPlayer then 				noob(data[i]) 			end 		end 		game.Players.PlayerAdded:connect(function(Player) 			noob(Player) 		end) 		spawn(function() 			placemarker.Anchored = true 			placemarker.CanCollide = false 			if Settings.rewrittenmain.DOT == true then 				placemarker.Size = Vector3.new(8, 8, 8) 			else 				placemarker.Size = Vector3.new(0, 0, 0) 			end 			placemarker.Transparency = 0.50 			if Settings.rewrittenmain.DOT then 				makemarker(placemarker, placemarker, Color3.fromRGB(240, 250, 1), 0.40, 0) 			end 		end) 		game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(k) 			if k == Settings.rewrittenmain.Key and Settings.rewrittenmain.Enabled then 				if enabled == true then 					enabled = false 					if Settings.rewrittenmain.NOTIF == true then 						Plr = getClosestPlayerToCursor() 						game.StarterGui:SetCore("SendNotification", { 							Title = "Sun God"; 							Text = "Spared Victim", 							Duration = 3 						}) 					end 				else 					Plr = getClosestPlayerToCursor() 					enabled = true 					if Settings.rewrittenmain.NOTIF == true then 						game.StarterGui:SetCore("SendNotification", { 							Title = "Sun God"; 							Text = "Victim: "..tostring(Plr.Character.Humanoid.DisplayName), 							Duration = 3 						}) 					end 				end 			end 		end) 		function getClosestPlayerToCursor() 			local closestPlayer 			local shortestDistance = Settings.rewrittenmain.FOV 			for i, v in pairs(game.Players:GetPlayers()) do 				if v ~= game.Players.LocalPlayer and v.Character and v.Character:FindFirstChild("Humanoid") and v.Character.Humanoid.Health ~= 0 and v.Character:FindFirstChild("HumanoidRootPart") then 					local pos = CC:WorldToViewportPoint(v.Character.PrimaryPart.Position) 					local magnitude = (Vector2.new(pos.X, pos.Y) - Vector2.new(mouse.X, mouse.Y)).magnitude 					if magnitude < shortestDistance then 						closestPlayer = v 						shortestDistance = magnitude 					end 				end 			end 			return closestPlayer 		end 		local pingvalue = nil; 		local split = nil; 		local ping = nil; 		game:GetService"RunService".Stepped:connect(function() 			if enabled and Plr.Character ~= nil and Plr.Character:FindFirstChild("HumanoidRootPart") then 				placemarker.CFrame = CFrame.new(Plr.Character.HumanoidRootPart.Position+(Plr.Character.HumanoidRootPart.Velocity*accomidationfactor)) 			else 				placemarker.CFrame = CFrame.new(0, 9999, 0) 			end 			if Settings.rewrittenmain.AUTOPRED == true then 				pingvalue = game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString() 				split = string.split(pingvalue,'(') 				ping = tonumber(split[1]) 				if ping < 130 then 					PredictionValue = 0.151 				elseif ping < 125 then 					PredictionValue = 0.149 				elseif ping < 110 then 					PredictionValue = 0.146 				elseif ping < 105 then 					PredictionValue = 0.138 				elseif ping < 90 then 					PredictionValue = 0.136 				elseif ping < 80 then 					PredictionValue = 0.134 				elseif ping < 70 then 					PredictionValue = 0.131 				elseif ping < 60 then 					PredictionValue = 0.1229 				elseif ping < 50 then 					PredictionValue = 0.1225 				elseif ping < 40 then 					PredictionValue = 0.1256 				end 			end 		end) 		local mt = getrawmetatable(game) 		local old = mt.__namecall 		setreadonly(mt, false) 		mt.__namecall = newcclosure(function(...) 			local args = {...} 			if enabled and getnamecallmethod() == "FireServer" and args[2] == "UpdateMousePos" and Settings.rewrittenmain.Enabled and Plr.Character ~= nil then 				-- args[3] = Plr.Character.HumanoidRootPart.Position+(Plr.Character.HumanoidRootPart.Velocity*accomidationfactor) --[[ if Settings.rewrittenmain.AIRSHOT == true then if game.Workspace.Players[Plr.Name].Humanoid:GetState() == Enum.HumanoidStateType.Freefall then -- Plr.Character:WaitForChild("Humanoid"):GetState() == Enum.HumanoidStateType.Freefall --// Airshot args[3] = Plr.Character.LeftFoot.Position+(Plr.Character.LeftFoot.Velocity*PredictionValue) else args[3] = Plr.Character.HumanoidRootPart.Position+(Plr.Character.HumanoidRootPart.Velocity*PredictionValue) end else args[3] = Plr.Character.HumanoidRootPart.Position+(Plr.Character.HumanoidRootPart.Velocity*PredictionValue) end ]] 				if Prediction == true then 					args[3] = Plr.Character[SelectedPart].Position+(Plr.Character[SelectedPart].Velocity*PredictionValue) 				else 					args[3] = Plr.Character[SelectedPart].Position 				end 				return old(unpack(args)) 			end 			return old(...) 		end) 		game:GetService("RunService").RenderStepped:Connect(function() 			if Settings.rewrittenmain.RESOVLER == true and Plr.Character ~= nil and enabled and Settings.rewrittenmain.Enabled then 				if Settings.rewrittenmain.AIRSHOT == true and enabled and Plr.Character ~= nil then 					if game.Workspace.Players[Plr.Name].Humanoid:GetState() == Enum.HumanoidStateType.Freefall then -- Plr.Character:WaitForChild("Humanoid"):GetState() == Enum.HumanoidStateType.Freefall 						--// Airshot 						--// Anchor Check 						if Plr.Character ~= nil and Plr.Character.HumanoidRootPart.Anchored == true then 							AnchorCount = AnchorCount + 1 							if AnchorCount >= MaxAnchor then 								Prediction = false 								wait(2) 								AnchorCount = 0; 							end 						else 							Prediction = true 							AnchorCount = 0; 						end 						SelectedPart = "LeftFoot" 					else 						--// Anchor Check 						if Plr.Character ~= nil and Plr.Character.HumanoidRootPart.Anchored == true then 							AnchorCount = AnchorCount + 1 							if AnchorCount >= MaxAnchor then 								Prediction = false 								wait(2) 								AnchorCount = 0; 							end 						else 							Prediction = true 							AnchorCount = 0; 						end 						SelectedPart = "HumanoidRootPart" 					end 				else 					--// Anchor Check 					if Plr.Character ~= nil and Plr.Character.HumanoidRootPart.Anchored == true then 						AnchorCount = AnchorCount + 1 						if AnchorCount >= MaxAnchor then 							Prediction = false 							wait(2) 							AnchorCount = 0; 						end 					else 						Prediction = true 						AnchorCount = 0; 					end 					SelectedPart = "HumanoidRootPart" 				end 			else 				SelectedPart = "HumanoidRootPart" 			end 		end) UICorner_3.Parent = Submit
      		print("button pressed")
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]

Tab:AddButton({
	Name = "Fov",
	Callback = function()player = game.Players.LocalPlayer

mouse = player:GetMouse()

gui = nil
getgui = game:GetObjects("rbxassetid://12701698194")
for i,v in pairs(getgui) do
    gui = v
end
gui.Parent = player.PlayerGui

player.CameraMaxZoomDistance = math.huge

mouseletgo = false

cam = workspace.CurrentCamera

XOFF = 0
YOFF = 0
ZOFF = 0
FOV = 0.5

gui.base.slider1.knob.MouseButton1Down:Connect(function()
	while task.wait() do
		if mouseletgo == true then break end
		local reletivepos = mouse.X - gui.base.slider1.AbsolutePosition.X 
		local percentage = math.clamp(reletivepos / gui.base.slider1.AbsoluteSize.X,0,1)
		FOV = percentage
		gui.base.slider1.knob.Rotation = percentage*360-180
		gui.base.slider1.knob.Position = UDim2.new(percentage - 0.035 ,0, -0.8, 0)
	end
end)

gui.base.slider2.knob.MouseButton1Down:Connect(function()
	while task.wait() do
		if mouseletgo == true then break end
		local reletivepos = mouse.X - gui.base.slider2.AbsolutePosition.X 
		local percentage = math.clamp(reletivepos / gui.base.slider2.AbsoluteSize.X,0,1)
		XOFF = percentage*10-5
		gui.base.slider2.knob.Rotation = percentage*360-180
		gui.base.slider2.knob.Position = UDim2.new(percentage - 0.035 ,0, -0.8, 0)
	end
end)

gui.base.slider3.knob.MouseButton1Down:Connect(function()
	while task.wait() do
		if mouseletgo == true then break end
		local reletivepos = mouse.X - gui.base.slider3.AbsolutePosition.X 
		local percentage = math.clamp(reletivepos / gui.base.slider3.AbsoluteSize.X,0,1)
		YOFF = percentage*10-5
		gui.base.slider3.knob.Rotation = percentage*360-180
		gui.base.slider3.knob.Position = UDim2.new(percentage - 0.035 ,0, -0.8, 0)
	end
end)

gui.base.slider4.knob.MouseButton1Down:Connect(function()
	while task.wait() do
		if mouseletgo == true then break end
		local reletivepos = mouse.X - gui.base.slider4.AbsolutePosition.X 
		local percentage = math.clamp(reletivepos / gui.base.slider4.AbsoluteSize.X,0,1)
		ZOFF = percentage*10-5
		gui.base.slider4.knob.Rotation = percentage*360-180
		gui.base.slider4.knob.Position = UDim2.new(percentage - 0.035 ,0, -0.8, 0)
	end
end)


mouse.Button1Up:Connect(function()
	mouseletgo = true
	task.wait()
	mouseletgo = false
end)
gui.base.slider1.knob.MouseButton1Up:Connect(function()
	mouseletgo = true
	task.wait()
	mouseletgo = false
end)
gui.base.slider2.knob.MouseButton1Up:Connect(function()
	mouseletgo = true
	task.wait()
	mouseletgo = false
end)
gui.base.slider3.knob.MouseButton1Up:Connect(function()
	mouseletgo = true
	task.wait()
	mouseletgo = false
end)
gui.base.slider4.knob.MouseButton1Up:Connect(function()
	mouseletgo = true
	task.wait()
	mouseletgo = false
end)


game:GetService("RunService").RenderStepped:connect(function() 
	cam.CoordinateFrame=cam.CoordinateFrame*CFrame.new(0,0,0,FOV+0.001,0,0,0,FOV+0.001,0,0,0,1)
    player.Character.Humanoid.CameraOffset = Vector3.new(XOFF,YOFF,ZOFF)
end)


local TweenService = game:GetService("TweenService")

ttoggle = false
gui.base.hidebutton.MouseButton1Up:Connect(function()
	if ttoggle == false then do
			ttoggle = true
			local targetPosition = UDim2.new(-0.25, 0, 0.546, 0)
			local tweenInfo = TweenInfo.new(2,Enum.EasingStyle.Bounce)
			local tween = TweenService:Create(gui.base, tweenInfo, {Position = targetPosition})
			tween:Play()
			
			local targetRotation = 0
			local tweenInfo = TweenInfo.new(2,Enum.EasingStyle.Bounce)
			local tween = TweenService:Create(gui.base.arrow, tweenInfo, {Rotation = targetRotation})
			tween:Play()
			
		end else
		ttoggle = false
		local targetPosition = UDim2.new(-0.005, 0, 0.546, 0)
		local tweenInfo = TweenInfo.new(2,Enum.EasingStyle.Bounce)
		local tween = TweenService:Create(gui.base, tweenInfo, {Position = targetPosition})
		tween:Play()
		
		local targetRotation = 180
		local tweenInfo = TweenInfo.new(2,Enum.EasingStyle.Bounce)
		local tween = TweenService:Create(gui.base.arrow, tweenInfo, {Rotation = targetRotation})
		tween:Play()
	end
end)


while wait() do
	gui.base.outline.UIGradient.Rotation += 0.2
	gui.base.cred2.UIGradient.Rotation += 0.2
	gui.base.hidebutton.Rotation += 0.2
	gui.base.hidebutton.UIStroke.UIGradient.Rotation -= 0.5
      end
      		print("button pressed")
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]

Tab:AddButton({
	Name = "Fov Dh Silent aim",
	Callback = function()getgenv().Settings = {
    ["Silent"] = {
        ["Enabled"] = true,
        ["AimPart"] = "Head",
        ["WallCheck"] = true,
        ["Visualize"] = true,
        ["Prediction"] = {
           ["Horizontal"] = 0.15,
           ["Vertical"] = 0.05,
        },
        ["AutoPrediction"] = {
            ["Enabled"] = true,
            ["Type"] = "Normal", --//Normal, Custom
           ["ping20_30"] = 0.12588,
           ["ping30_40"] = 0.11911,
           ["ping40_50"] = 0.12471,
           ["ping50_60"] = 0.13766,
           ["ping60_70"] = 0.13731,
           ["ping70_80"] = 0.13951,
           ["ping80_90"] = 0.14181,
           ["ping90_100"] = 0.148,
           ["ping100_110"] = 0.156,
           ["ping110_120"] = 0.1567,
           ["ping120_130"] = 0.1601,
           ["ping130_140"] = 0.1637,
           ["ping140_150"] = 0.173,
           ["ping150_160"] = 0.1714,
           ["ping160_170"] = 0.1863,
           ["ping170_180"] = 0.1872,
           ["ping180_190"] = 0.1848,
           ["ping190_200"] = 0.1865,
        },
        ["Mode"] = "Namecall", --index,namecal
    },
    ["FOV"] = {
        ["Enabled"] = true,
        ["Size"] = 30,
        ["Filled"] = false,
        ["Thickness"] = 0.66,
        ["Transparency"] = 0.9,
        ["Color"] = Color3.fromRGB(255,0,255),
    },
    ["Camlock"] = {
        ["Enabled"] = true,
        ["AimPart"] = "HumanoidRootPart",
        ["Prediction"] = {
           ["Horizontal"] = 0.185,
           ["Vertical"] = 0.1,
        },
        ["Smoothness"] = 0.1,
        ["AutoPrediction"] = {
            ["Enabled"] = true,
            ["Type"] = "Normal", --//Normal, Custom
           ["ping20_30"] = 0.12588,
           ["ping30_40"] = 0.11911,
           ["ping40_50"] = 0.12471,
           ["ping50_60"] = 0.12766,
           ["ping60_70"] = 0.12731,
           ["ping70_80"] = 0.12951,
           ["ping80_90"] = 0.13181,
           ["ping90_100"] = 0.138,
           ["ping100_110"] = 0.146,
           ["ping110_120"] = 0.1367,
           ["ping120_130"] = 0.1401,
           ["ping130_140"] = 0.1437,
           ["ping140_150"] = 0.153,
           ["ping150_160"] = 0.1514,
           ["ping160_170"] = 0.1663,
           ["ping170_180"] = 0.1672,
           ["ping180_190"] = 0.1848,
           ["ping190_200"] = 0.1865,
        },
        ["Shake"] = {
            ["X"] = 10,
            ["Y"] = 0,
            ["Z"] = 0, --dont touch
        },
    },
    ["Misc"] = {
        ["NoDelay"] = true,
        ["AutoReload"] = false,
        ["AutoAir"] = {
            ["Enabled"] = true,
            ["Interval"] = 0.5,
        },
        ["CMDS"] = { 
            ["Enabled"] = true,
            ["FOVPrefix"] = "B",
            ["Prediction"] = "A",
       },
    },
    ["Resolution"] = {
        ["Value"] = 1,
       },
    ["Resolvers"] = {  --entirely not
        ["Enabled"] = false,
        ["AutoDetect"] = false,
        ["Type"] = "Recalculator",
    },
    ["Visuals"] = {
        ["Ambient"] = {
            ["Enabled"] = false,
            ["Color"] = Color3.fromRGB(4, 0, 255),
        },
        ["OutDoor Ambient"] = {
            ["Enabled"] = false,
            ["Color"] = Color3.fromRGB(4, 0, 255)
        },
        ["Fog Modifications"] = {
            ["Enabled"] = false,
            ["Color"] = Color3.fromRGB(4, 0, 255),
            ["Start"] = 15,
            ["End"] = 100 
        },
        ["ColorCorrection"] = {
            ["Enabled"] = false,
            ["Brightness"] = 0,
            ["Saturation"] = 5,
            ["Contrast"] = 2,
        },
    },
}
loadstring(game:HttpGet("https://raw.githubusercontent.com/bobbbb-b/B/main/77_SJQ0ZC.lua"))()
      		print("button pressed")
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]
